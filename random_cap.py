# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1boawx9Bz0g4AuRhXQbY2G1jaeRiAHJVE
"""

from os import listdir
from random import choice
import os, os.path
import requests
import urllib.request


ext2conttype = {"jpg": "image/jpeg",
                "jpeg": "image/jpeg",
                "png": "image/png",
                "gif": "image/gif"}

def content_type(filename):
    return ext2conttype[filename[filename.rfind(".")+1:].lower()]

def isimage(filename):
    """true if the filename's extension is in the content-type lookup"""
    filename = filename.lower()
    return filename[filename.rfind(".")+1:] in ext2conttype

def random_file(list_url):
    """returns the filename of a randomly chosen image in dir"""
    images = [f for f in list_url if isimage(f)]
    return choice(images)

def safe_open_w(url,path):
    ''' Open "path" for writing, creating any parent directories as needed.
    '''
    os.makedirs(os.path.dirname(path), exist_ok=True)
    return urllib.request.urlretrieve(url, path)

def show_cap():
    S = requests.Session()

    URL = "https://en.wikipedia.org/w/api.php"
    src = "https://commons.wikimedia.org/wiki/Special:FilePath/"

    PARAMS = {
        "action": "query",
        "format": "json",
        "titles": "Capybara",
        "prop": "images"
    }

    R = S.get(url=URL, params=PARAMS)
    DATA = R.json()

    PAGES = DATA['query']['pages']
    list_url = []
    
    for k, v in PAGES.items():
        for img in v['images']:
            image_url = src + (img["title"]).replace(" ", "_")
            path = "./output/"+(img["title"]).replace(" ", "_")
            list_url.append(image_url)

    output = random_file(list_url)
    return output

